# UI优化版本的Nginx配置
user nextjs;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 优化事件处理
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'request_time=$request_time '
                       'upstream_response_time=$upstream_response_time '
                       'upstream_connect_time=$upstream_connect_time '
                       'upstream_header_time=$upstream_header_time';

    access_log /var/log/nginx/access.log main;

    # 基础配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # 安全头配置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Gzip压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/woff
        font/woff2;

    # Brotli压缩配置（如果支持）
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 文件缓存配置
    open_file_cache max=10000 inactive=5m;
    open_file_cache_valid 2m;
    open_file_cache_min_uses 1;
    open_file_cache_errors on;

    # 速率限制
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=30r/s;

    # 连接限制
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    server {
        listen 8080;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # 安全配置
        limit_conn addr 10;

        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        # 主要location配置
        location / {
            # 启用try_files以支持SPA
            try_files $uri $uri/ /index.html;

            # 安全头
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;

            # 防止点击劫持
            add_header X-Frame-Options "DENY" always;

            # 速率限制
            limit_req zone=static burst=50 nodelay;
        }

        # 静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;

            # 压缩配置
            gzip_static on;

            # 速率限制
            limit_req zone=static burst=100 nodelay;

            # 跨域配置（如果需要）
            add_header Access-Control-Allow-Origin "*";
        }

        # API代理
        location /api/ {
            # 代理到后端服务
            proxy_pass http://backend:8000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # 超时配置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # 缓冲配置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;

            # 速率限制
            limit_req zone=api burst=20 nodelay;

            # 错误处理
            proxy_intercept_errors on;
            error_page 502 503 504 /502.html;
        }

        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 构建信息端点
        location /build-info {
            try_files /build-info.json =404;
            add_header Content-Type application/json;
        }

        # Bundle分析端点（仅限开发环境）
        location /bundle-analysis {
            try_files /bundle-analysis.json =404;
            add_header Content-Type application/json;

            # 限制访问（可选）
            # allow 10.0.0.0/8;
            # deny all;
        }

        # 错误页面
        location = /404.html {
            internal;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        location = /50x.html {
            internal;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        location = /502.html {
            internal;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # 禁止访问敏感文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 禁止访问配置文件
        location ~* \.(conf|config|ini|log|bak|backup|old)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 禁止访问源代码
        location ~* \.(vue|js\.map|css\.map)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # HTTPS配置（生产环境）
    server {
        listen 8443 ssl http2;
        server_name localhost;

        # SSL证书配置
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # SSL安全配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # 其他配置与HTTP相同
        include /etc/nginx/conf.d/common.conf;
    }

    # 性能优化配置
    client_max_body_size 50M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # 缓冲区配置
    output_buffers 1 32k;
    postpone_output 1460;

    # 监控配置
    status_zone http_server_zone;

    # 包含其他配置文件
    include /etc/nginx/conf.d/*.conf;
}